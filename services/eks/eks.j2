AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Env:
    Type: String
    Default: {{environment}}
    Description: Name of the environmnet

  ClusterName:
    Type: String
    Default: {{cluster_name}}
    Description: Name of the EKS cluster  

  ClusterVersion:
    Type: String
    Default: {{k8s_version}}
    Description: Version of the EKS cluster

  logtypes:
    Type: CommaDelimitedList
    Default: "{{log_types}}"
    Description: Comma-separated list of log types to enable (api, audit, authenticator, controllerManager, scheduler)
  
  EndpointPrivateAccess:
    Type: String
    Default: {{cluster_endpoint_private_access}}
    AllowedValues: ["true", "false"]
    Description: Specify whether to enable private access to the EKS cluster endpoint (true/false)

  EndpointPublicAccess:
    Type: String
    Default: {{cluster_endpoint_public_access}}
    AllowedValues: ["true", "false"]
    Description: Specify whether to enable public access to the EKS cluster endpoint (true/false)  

  VpcId:
    Type: String
    Default: {{vpc_id}}
    Description: VPC where the EKS cluster will be created

  SubnetId:
    Description: Subnets where the EKS cluster will be created
    Type: String
    Default: "{{subnet_id}}"
 
  NodeGroupName:
    Type: String
    Default: {{node_group_name}}
    Description: Name of the node group  

  NodeCapacityType:
    Type: String
    Default: {{node_capacity_type}}
    Description: EC2 instance type for the nodes 

  NodeGroupMinSize:
    Type: Number
    Default: {{node_group_min_size}}
    Description: Minimum number of nodes in the node group

  NodeGroupMaxSize:
    Type: Number
    Default: {{node_group_max_size}}
    Description: Maximum number of nodes in the node group

  NodeGroupDesiredSize:
    Type: Number
    Default: {{node_group_desired_size}}
    Description: Minimum number of nodes in the node group  
   
  NodeInstanceType:
    Type: String
    Default: {{instance_type}}
    Description: EC2 instance type for the nodes

  VolumeSize:
    Type: Number
    Default: {{volume_size}}
    Description: Size of the worker node EBS volume in GB

  VolumeType:
    Type: String
    Default: {{volume_type}}
    Description: Type of the worker node EBS volume

Resources:
  EksSecuritygroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Additional security group for EKS cluster
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - Description: To node 1025-65535
          IpProtocol: tcp
          FromPort: 1025
          ToPort: 1025
          CidrIp: 0.0.0.0/0
            
        - Description: Allow the pods to communicate with the cluster API Server
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
                      
        - Description: Cluster all egress
          IpProtocol: '-1'
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
          
      SecurityGroupIngress:
        - Description: Node to node all ports/protocols
          IpProtocol: '-1'
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 

  Cluster:
    Type: AWS::EKS::Cluster
    DependsOn : EksSecuritygroup
    Properties:
      Name: !Ref ClusterName
      Version: !Ref ClusterVersion 
      Logging:
        ClusterLogging:
          EnabledTypes:
            {% for type in log_types.split(",") -%}
            - Type: {{ type.strip() }}
            {% endfor %}      
      ResourcesVpcConfig:
        EndpointPrivateAccess: !Ref EndpointPrivateAccess
        EndpointPublicAccess: !Ref EndpointPublicAccess
        SubnetIds:
          {% for subnetid in subnet_id.split(",") -%}
          - {{ subnetid.strip() }}
          {% endfor %}
        SecurityGroupIds:
          - !Ref EksSecuritygroup  
      RoleArn: !GetAtt ClusterRole.Arn
      Tags:
        - Key: "Name"
          Value: !Ref ClusterName

  NodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: Cluster
    Properties:
      ClusterName: !Ref ClusterName
      CapacityType: !Ref NodeCapacityType
      NodegroupName: !Ref NodeGroupName
      NodeRole: !GetAtt NodeInstanceRole.Arn
      ScalingConfig:
        DesiredSize: !Ref NodeGroupDesiredSize
        MinSize: !Ref NodeGroupMinSize
        MaxSize: !Ref NodeGroupMaxSize
      DiskSize: !Ref VolumeSize
      Subnets:
        {% for subnetid in subnet_id.split(",") -%}
        - {{ subnetid.strip() }}
        {% endfor %}
      InstanceTypes:
        - !Ref NodeInstanceType

  ClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Env}-${ClusterName}-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Env}-${ClusterName}-node-instancerole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - eks.amazonaws.com
                - ec2.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly


